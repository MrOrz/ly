{"version":3,"sources":["SettingsPage.js","lib/FBAsync.js","components/FacebookPagePlugin.js","lib/text.js","SendPage.js","lib/useLegislatorData.js","App.js","serviceWorker.js","index.js"],"names":["PageContainer","styled","div","_templateObject","SettingsPage","_ref","_ref$msg","msg","_ref$onMsgChange","onMsgChange","_ref$legislators","legislators","_ref$selectedLegislat","selectedLegislatorIds","_ref$doneLegislatorsM","doneLegislatorsMap","_ref$onSelectionChang","onSelectionChange","_ref$onSubmit","onSubmit","selectionSectionRef","useRef","hasStarted","Object","keys","length","legislatorToSendCount","filter","id","doneStr","concat","react_default","a","createElement","value","onChange","e","target","type","onClick","current","scrollIntoView","behavior","block","ref","map","_ref2","disabled","fbPromise","window","FB","Promise","resolve","fbAsyncInit","then","init","appId","process","version","React","memo","_ref$tabs","tabs","_ref$href","href","fbRoot","useEffect","FBAsync","XFBML","parse","className","data-href","data-tabs","join","data-small-header","data-adapt-container-width","data-show-facepile","data-hide-cta","BREAK","$$BREAK","traverseElems","elems","callback","result","i","returnValue","traverseForStrings","push","elem","Array","isValidElement","children","Children","toArray","props","newChildren","every","child","idx","cloneElement","newLineRegExp","RegExp","SendPage_templateObject","Button","button","_templateObject2","Note","textarea","_templateObject3","SendPage","_ref$currentIdx","currentIdx","selectedLegislators","_ref$onNext","onNext","onBack","_selectedLegislators$","name","prideWatchPage","position","desc","facebookPage","SendPage_PageContainer","placeholder","select","components_FacebookPagePlugin","str","tokens","tokenized","split","token","line","match","key","legislatorData","useLegislatorData","_useState","useState","_useState2","slicedToArray","setLegislators","__webpack_require__","t","bind","data","default","useMemo","reduce","agg","legislator","DEFAULT_MESSAGE","POSITION_ORDER","支持同婚","支持專法","反對同婚","未表態","App","_useLegislatorData","_useLegislatorData2","legislatorMap","page","setPage","_useState3","_useState4","setMsg","_useState5","_useState6","setLegislatorIds","_useState7","_useState8","doneLegislatorMap","setLegislatorDone","src_SettingsPage","sort","aId","bId","find","findIndex","src_SendPage","objectSpread","defineProperty","Error","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.941a6d7e.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n  padding: 40px;\n`;\n\nfunction SettingsPage({\n  msg = '',\n  onMsgChange = () => {},\n  legislators = [],\n  selectedLegislatorIds = [],\n  doneLegislatorsMap = {},\n  onSelectionChange = () => {},\n  onSubmit = () => {},\n}) {\n  const selectionSectionRef = useRef(null);\n  const hasStarted = Object.keys(doneLegislatorsMap).length > 0;\n  const legislatorToSendCount = selectedLegislatorIds.filter(\n    id => !doneLegislatorsMap[id]\n  ).length;\n  const doneStr = hasStarted\n    ? `還有 ${legislatorToSendCount} 位委員要傳，`\n    : '';\n  const timeStr = ' 10 秒';\n\n  return (\n    <PageContainer>\n      <header>\n        <h1>我愛家・我聯絡</h1>\n        <h2>平權立院鍵盤陳情</h2>\n      </header>\n\n      <section>\n        <h3>想要跟立委們說什麼呢？</h3>\n        <textarea value={msg} onChange={e => onMsgChange(e.target.value)} />\n        <button\n          type=\"button\"\n          onClick={() =>\n            selectionSectionRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            })\n          }\n        >\n          下一步\n        </button>\n      </section>\n\n      <section ref={selectionSectionRef}>\n        <h3>請選擇要陳情的立委</h3>\n        <button\n          type=\"button\"\n          onClick={() => onSelectionChange(legislators.map(({ id }) => id))}\n        >\n          全選啦！\n        </button>\n        <p>\n          您選了 {selectedLegislatorIds.length} 名委員{doneStr}，大概要花\n          {timeStr}。\n        </p>\n        <button\n          type=\"button\"\n          onClick={onSubmit}\n          disabled={legislatorToSendCount === 0}\n        >\n          {hasStarted ? '繼續' : '開始'}陳情\n        </button>\n      </section>\n    </PageContainer>\n  );\n}\n\nexport default SettingsPage;\n","const fbPromise = (window.FB\n  ? Promise.resolve(window.FB)\n  : new Promise(resolve => {\n      window.fbAsyncInit = () => {\n        resolve(window.FB);\n      };\n    })\n).then(FB => {\n  FB.init({\n    appId: process.env.REACT_APP_FB_ID,\n    version: 'v3.2',\n  });\n  return FB;\n});\n\nexport default fbPromise;\n","import React, { useEffect, useRef } from 'react';\n\nimport FBAsync from 'lib/FBAsync';\n\nfunction FacebookPagePlugin({ tabs = ['messages', 'timeline'], href = '' }) {\n  const fbRoot = useRef(null);\n\n  useEffect(() => {\n    FBAsync.then(FB => {\n      FB.XFBML.parse(fbRoot.current);\n    });\n  });\n\n  return (\n    <div ref={fbRoot}>\n      <div\n        className=\"fb-page\"\n        data-href={href}\n        data-tabs={tabs.join(',')}\n        data-small-header=\"true\"\n        data-adapt-container-width=\"true\"\n        data-show-facepile=\"false\"\n        data-hide-cta=\"true\"\n      />\n    </div>\n  );\n}\n\nexport default React.memo(FacebookPagePlugin);\n","import React from 'react';\n\nconst BREAK = { $$BREAK: true };\n\n/**\n * Invokes traverseForStrings for each item in elems.\n * When `BREAK` is received, break traversal immediately.\n *\n * @param {*} elem Array of elements to traverse\n * @param {Function} callback passed to traverseForStrings()\n */\nfunction traverseElems(elems, callback) {\n  const result = [];\n  for (let i = 0; i < elems.length; i += 1) {\n    const returnValue = traverseForStrings(elems[i], callback);\n    if (returnValue === BREAK) break;\n    result.push(returnValue);\n  }\n\n  return result;\n}\n\n/**\n * Traverses elem tree for strings, returns callback(string)\n * @param {*} elem\n * @param {Function} callback\n */\nfunction traverseForStrings(elem, callback) {\n  switch (true) {\n    case typeof elem === 'string':\n      return callback(elem);\n\n    case elem instanceof Array:\n      return traverseElems(elem, callback);\n\n    case React.isValidElement(elem): {\n      const children = React.Children.toArray(elem.props.children);\n      const newChildren = traverseElems(children, callback);\n\n      // No need to clone element if new children is identical with the original\n      //\n      if (\n        children.length === newChildren.length &&\n        children.every((child, idx) => child === newChildren[idx])\n      ) {\n        return elem;\n      }\n\n      return React.cloneElement(elem, {}, newChildren);\n    }\n    default:\n      return null;\n  }\n}\n\nfunction flatternPureStrings(tokens) {\n  return tokens.every(token => typeof token === 'string')\n    ? tokens.join()\n    : tokens;\n}\n\nconst newLinePattern = '(\\r\\n|\\r|\\n)';\n// Spaces around new line pattern should be safe to trim, because we are placing <br>\n// on the newLinePattern.\nconst newLineRegExp = RegExp(` *${newLinePattern} *`, 'g');\n\n/**\n * Place <br> for each line break.\n * Automatically trims away leading & trailing line breaks.\n *\n * @param {*} elem React element, string, array of string & react elements\n */\nexport function nl2br(elem) {\n  return traverseForStrings(elem, str => {\n    if (!str) return str;\n\n    const tokenized = str\n      .split(newLineRegExp)\n      .filter(token => token !== '') // Filter out empty strings\n      .map((line, idx) =>\n        line.match(newLineRegExp) ? <br key={`br${idx}`} /> : line\n      );\n\n    // If the tokenized contains only string, join into one single string.\n    //\n    return flatternPureStrings(tokenized);\n  });\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport FacebookPagePlugin from 'components/FacebookPagePlugin';\nimport { nl2br } from 'lib/text';\n\nconst PageContainer = styled.div`\n  display: flex;\n  padding: 40px;\n\n  section {\n    flex: 1;\n    padding-left: 24px;\n    &:first-of-type {\n      padding-left: 0;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 32px;\n`;\n\nconst Note = styled.textarea`\n  width: 100%;\n  height: 100%;\n`;\n\nfunction SendPage({\n  msg = '',\n  currentIdx = 0 /* -1 when done */,\n  selectedLegislators = [],\n\n  onMsgChange = () => {},\n  onNext = () => {},\n  onBack = () => {},\n}) {\n  if (currentIdx === -1) {\n    return <div>都做完囉！謝謝您 m(_ _)m</div>;\n  }\n\n  const {\n    name,\n    prideWatchPage,\n    position,\n    desc,\n    facebookPage,\n  } = selectedLegislators[currentIdx];\n\n  return (\n    <PageContainer>\n      <section>\n        <Note\n          placeholder=\"把陳情文字貼在這裡，方便複製貼上\"\n          onChange={e => onMsgChange(e.target.value)}\n          value={msg}\n          onClick={e => e.target.select()}\n        />\n      </section>\n      <section>\n        <FacebookPagePlugin href={facebookPage} />\n      </section>\n      <section>\n        <h1>\n          <a href={prideWatchPage}>{name}</a>\n        </h1>\n        <h2>{position}</h2>\n        <p>{nl2br(desc)}</p>\n        <Button onClick={onNext}>下一位 》</Button>\n      </section>\n    </PageContainer>\n  );\n}\n\nexport default SendPage;\n","import { useState, useEffect, useMemo } from 'react';\n\n// shared storage of legislators\nlet legislatorData = null;\n\n/**\n * @returns {[object[], object]} legislators & legislatorMap (id to legislator)\n */\nfunction useLegislatorData() {\n  const [legislators, setLegislators] = useState(legislatorData);\n\n  useEffect(() => {\n    if (legislators) return;\n\n    import('data/legislators.json').then(data =>\n      setLegislators((legislatorData = data.default))\n    );\n  });\n\n  return [\n    legislators,\n    useMemo(\n      () =>\n        (legislators || []).reduce((agg, legislator) => {\n          agg[legislator.id] = legislator;\n          return agg;\n        }, {}),\n      [legislators]\n    ),\n  ];\n}\n\nexport default useLegislatorData;\n","import React, { useState } from 'react';\nimport SettingsPage from './SettingsPage';\nimport SendPage from './SendPage';\nimport useLegislatorData from 'lib/useLegislatorData';\n\nconst DEFAULT_MESSAGE =\n  '我是ＸＸ區的選民，請委員支持用合憲的法律，讓同志可以結婚。';\n\nconst POSITION_ORDER = {\n  支持同婚: 1,\n  支持專法: 2,\n  反對同婚: 3,\n  未表態: 4,\n};\n\nfunction App() {\n  const [legislators, legislatorMap] = useLegislatorData();\n  const [page, setPage] = useState('settings'); // current page. enum: 'settings', 'send'\n  const [msg, setMsg] = useState(DEFAULT_MESSAGE); // message template\n  const [selectedLegislatorIds, setLegislatorIds] = useState([]); // list of selected legislator ID, with done legislators always in front.\n  const [doneLegislatorMap, setLegislatorDone] = useState({}); // {[done legislator ID]: true, ...}\n\n  switch (page) {\n    case 'settings':\n      return (\n        <SettingsPage\n          msg={msg}\n          onMsgChange={setMsg}\n          legislators={legislators}\n          selectedLegislatorIds={selectedLegislatorIds}\n          onSelectionChange={selectedLegislatorIds => {\n            setLegislatorIds(\n              selectedLegislatorIds.sort((aId, bId) => {\n                // First, put done legislators in front\n                if (doneLegislatorMap[aId] && !doneLegislatorMap[bId])\n                  return -1;\n                if (!doneLegislatorMap[aId] && doneLegislatorMap[bId]) return 1;\n\n                // Then compare their positions\n                const aPos = POSITION_ORDER[legislatorMap[aId].position];\n                const bPos = POSITION_ORDER[legislatorMap[bId].position];\n                return aPos - bPos;\n              })\n            );\n          }}\n          doneLegislatorMap={doneLegislatorMap}\n          onSubmit={() => setPage('send')}\n        />\n      );\n\n    case 'send': {\n      const selectedLegislators = selectedLegislatorIds.map(id =>\n        legislators.find(legislator => legislator.id === id)\n      );\n\n      const currentIdx = selectedLegislatorIds.findIndex(\n        id => !doneLegislatorMap[id]\n      );\n\n      return (\n        <SendPage\n          msg={msg}\n          currentIdx={currentIdx}\n          selectedLegislators={selectedLegislators}\n          onMsgChange={setMsg}\n          onNext={() =>\n            setLegislatorDone({\n              ...doneLegislatorMap,\n              [selectedLegislators[currentIdx].id]: true,\n            })\n          }\n          onBack={() => setPage('settings')}\n        />\n      );\n    }\n    default:\n      throw new Error('Wrong page settings');\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}